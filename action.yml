name: "gh-action-sigstore-python"
author: "Alex Cameron <alex.cameron@trailofbits.com>"
description: "Use sigstore-python to sign Python packages"
inputs:
  inputs:
    description: "the files to sign, whitespace separated"
    required: true
    default: ""
  oidc-client-id:
    description: "the custom OpenID Connect client ID to use during OAuth2"
    required: false
    default: ""
  oidc-client-secret:
    description: "the custom OpenID Connect client secret to use during OAuth2"
    required: false
    default: ""
  no-default-files:
    description: "don't emit the default output files ({input}.sig and {input}.crt)"
    required: false
    default: false
  signature:
    description: "write a single signature to the given file; does not work with multiple input files"
    required: false
    default: ""
  certificate:
    description: "write a single certificate to the given file; does not work with multiple input files"
    required: false
    default: ""
  overwrite:
    description: "overwrite preexisting signature and certificate outputs, if present"
    required: false
    default: false
  fulcio-url:
    description: "the Fulcio instance to use (conflicts with `staging`)"
    required: false
    default: ""
  rekor-url:
    description: "the Rekor instance to use (conflicts with `staging`)"
    required: false
    default: ""
  ctfe:
    description: "a PEM-encoded public key for the CT log (conflicts with `staging`)"
    required: false
    default: ""
  rekor-root-pubkey:
    description: "a PEM-encoded root public key for Rekor itself (conflicts with `staging`)"
    required: false
    default: ""
  oidc-issuer:
    description: "the OpenID Connect issuer to use; if `verify` is on, the issuer extension of the signing certificate will also get checked to ensure that it matches"
    required: false
    default: ""
  staging:
    description: "use sigstore's staging instances, instead of the default production instances"
    required: false
    default: false
  verify:
    description: "verify the generated signatures after signing"
    required: false
    default: true
  verify-cert-email:
    description: "verify the email address to in the signing certificate's Subject Alternative Name (only applies when `verify` is on)"
    required: false
    default: ""
  upload-signing-artifacts:
    description: "upload all signing artifacts as workflow artifacts"
    required: false
    default: false
  release-signing-artifacts:
    description: "attach all signing artifacts as release assets"
    required: false
    default: false
  internal-be-careful-debug:
    description: "run with debug logs (default false)"
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Set up sigstore-python
      run: |
        # NOTE: Sourced, not executed as a script.
        source "${{ github.action_path }}/setup/setup.bash"
      shell: bash

    - name: Run sigstore-python
      id: sigstore-python
      run: |
        ${{ github.action_path }}/action.py "${{ inputs.inputs }}"
      env:
        GHA_SIGSTORE_PYTHON_NO_DEFAULT_FILES: "${{ inputs.no-default-files }}"
        GHA_SIGSTORE_PYTHON_SIGNATURE: "${{ inputs.signature }}"
        GHA_SIGSTORE_PYTHON_CERTIFICATE: "${{ inputs.certificate }}"
        GHA_SIGSTORE_PYTHON_OVERWRITE: "${{ inputs.overwrite }}"
        GHA_SIGSTORE_PYTHON_OIDC_CLIENT_ID: "${{ inputs.oidc-client-id }}"
        GHA_SIGSTORE_PYTHON_OIDC_CLIENT_SECRET: "${{ inputs.oidc-client-secret }}"
        GHA_SIGSTORE_PYTHON_FULCIO_URL: "${{ inputs.fulcio-url }}"
        GHA_SIGSTORE_PYTHON_REKOR_URL: "${{ inputs.rekor-url }}"
        GHA_SIGSTORE_PYTHON_CTFE: "${{ inputs.ctfe }}"
        GHA_SIGSTORE_PYTHON_REKOR_ROOT_PUBKEY: "${{ inputs.rekor-root-pubkey }}"
        GHA_SIGSTORE_PYTHON_OIDC_ISSUER: "${{ inputs.oidc-issuer }}"
        GHA_SIGSTORE_PYTHON_STAGING: "${{ inputs.staging }}"
        GHA_SIGSTORE_PYTHON_VERIFY: "${{ inputs.verify }}"
        GHA_SIGSTORE_PYTHON_VERIFY_CERT_EMAIL: "${{ inputs.verify-cert-email }}"
        GHA_SIGSTORE_PYTHON_INTERNAL_BE_CAREFUL_DEBUG: "${{ inputs.internal-be-careful-debug }}"
      shell: bash

    - uses: actions/upload-artifact@v3
      if: inputs.upload-signing-artifacts == 'true'
      with:
        name: "signing-artifacts-${{ github.job }}"
        path: "${{ env.GHA_SIGSTORE_PYTHON_SIGNING_ARTIFACTS }}"

    - uses: softprops/action-gh-release@v1
      if: inputs.release-signing-artifacts == 'true' && github.event_name == 'release' && github.event.action == 'created'
      with:
        files: "${{ env.GHA_SIGSTORE_PYTHON_SIGNING_ARTIFACTS }}"
